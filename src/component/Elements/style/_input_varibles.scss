$border-color: rgba(60, 118, 61);
$border-color-focused: rgb(114,192,44);

// prettier-ignore
@mixin floating-label-input (
  // Selectors
  $input: ".input",
  $label: ".label",

  // The height of the input. Doesn't apply to textareas.
  $height: 40px,

  // The style of the border in its default state.
  // (radius is ignored if $border-style is 'underline'.)
  $border-size: 1px,
  $border-radius: 10px,
  $border-color: $border-color,

  // 'box' | 'underline'
  $border-style: 'box',

  // Colors in its alternate states
  $border-color-focused: $border-color-focused,
  $redColor:rgb(175,2,2),

  // Label style
  $label-color: #789,
  $label-color-large: $label-color,
  $label-color-small: $label-color,
  $label-color-focused: $border-color-focused,
  $label-color-invalid: $redColor,


  $timing-function: ease-in-out,

) {
  & {
    display: inline-block;
    position: relative;
  }

  &,
  > #{$input},
  > #{$label} {
    box-sizing: border-box;
  }

  // Border
  &::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    transition: border-color 75ms linear;
    @if ($border-style == 'box') {
      border: solid $border-size $border-color;
      border-radius: $border-radius;
    }
    @if ($border-style == 'underline') {
      border-bottom: solid $border-size $border-color;
    }
  }

  // Focus ring
  &:focus-within::before {
    border-color: $border-color-focused;
    box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 6px #67b168;
    transition: border-color 19ms linear;
  }

  > #{$label} {
    position: absolute;
    top: 0;
    left: $border-size + 6px;
    transition: color 75ms linear, background 75ms $timing-function, line-height 75ms $timing-function, font-size 75ms $timing-function;
    background: transparent;
    z-index: 2;
    white-space: nowrap;
    cursor: text;
  }

  // Input reset
  > #{$input} {
    margin: 0;
    padding: 0 12px;
    border: 0;
    background: transparent;
    min-height: $height;
    position: relative;
    z-index: 1;
    transition: opacity 75ms $timing-function, box-shadow 75ms $timing-function;
    width: 100%;

    @if ($border-style == 'box') {
      // Border radius doesn't make sense in underline mode
      border-radius: $border-radius;
    }
  }

  > input#{$input} {
    // For single-line inputs, set the `line-height`.
    // This dictates the overall height of the entire input
    // field. This won't apply for multi-line inputs
    // (textarea), which will be sized using padding.
    line-height: $height;
  }

  > #{$input} {
    &:focus {
      outline: 0;
    }

    &:invalid {
      // Cancel the default styling of invalid fields;
      // we'll style them later in :invalid:not(:focus).
      outline: 0;
      box-shadow: none;
    }

    &:invalid:not(:focus) {
      // Prevent the textbox from turning red while typing.
      // This can happen in email input boxes, where typing a partial
      // email address (without @) causes :invalid to be triggered.
      outline: 0;
      border: 0;
      @if ($border-style == 'box') {
        box-shadow: inset 0 0 0 $border-size $redColor;
      }
      @if ($border-style == 'underline') {
        box-shadow: inset 0 (-1 * $border-size) 0 $redColor;
      }
    }

    &:invalid:not(:focus) + #{$label} {
      color: $label-color-invalid;
    }

    &:focus + #{$label} {
      color: $label-color-focused;
      top: -13px;
    }

    &:placeholder-shown:not(:focus) {
      // Hide input when label is shown
      opacity: 0;
    }
  }

  // Small label ("up there")
  > #{$label} {
    line-height: $border-size;
    height: auto;
    padding: 0 6px;
    font-size: 0.86em;
    color: $label-color-small;
    top:-10px;
    // We need to have a fixed background
    background: white;

    @if ($border-style == 'box') {
      // Not strictly needed, but it makes the transition look
      // a little nice.
      border-radius: $border-radius;
    }

    @if ($border-style == 'underline') {
      transform: translate3d(0, 0, 0);
    }
  }

  // Big label ("down there")
  > #{$input}:placeholder-shown:not(:focus) + #{$label} {
    line-height: $height - $border-size * 2;
    margin-top: $border-size;
    font-size: 1em;
    top:0;
    color: $label-color-large;
    background: transparent;
  }

  > #{$input}::placeholder {
    color: $label-color-large;
  }
}


//ERROR

@mixin floating-label-input-error (
  // Selectors
  $input: ".input",
  $label: ".label",

  // The height of the input. Doesn't apply to textareas.
  $height: 40px,

  // The style of the border in its default state.
  // (radius is ignored if $border-style is 'underline'.)
  $border-size: 1px,
  $border-radius: 10px,

  // 'box' | 'underline'
  $border-style: 'box',

  $redColor:rgb(175,2,2),
  $timing-function: ease-in-out,

) {
  & {
    display: inline-block;
    position: relative;
  }

  &,
  > #{$input},
  > #{$label} {
    box-sizing: border-box;
  }

  // Border
  &::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    transition: border-color 75ms linear;
    @if ($border-style == 'box') {
      border: solid $border-size $redColor;
      border-radius: $border-radius;
    }
    @if ($border-style == 'underline') {
      border-bottom: solid $border-size $redColor;
    }
  }

  // Focus ring
  &:focus-within::before {
    border-color: $redColor;
    box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 6px $redColor;
    transition: border-color 19ms linear;
  }

  > #{$label} {
    position: absolute;
    top: 0;
    left: $border-size + 6px;
    transition: color 75ms linear, background 75ms $timing-function, line-height 75ms $timing-function, font-size 75ms $timing-function;
    background: transparent;
    z-index: 2;
    white-space: nowrap;
    cursor: text;
  }

  // Input reset
  > #{$input} {
    margin: 0;
    padding: 0 12px;
    border: 0;
    background: transparent;
    min-height: $height;
    position: relative;
    z-index: 1;
    transition: opacity 75ms $timing-function, box-shadow 75ms $timing-function;
    width: 100%;

    @if ($border-style == 'box') {
      // Border radius doesn't make sense in underline mode
      border-radius: $border-radius;
    }
  }

  > input#{$input} {
    line-height: $height;
  }

  > #{$input} {
    &:focus {
      outline: 0;
    }

    &:focus + #{$label} {
      color: $redColor;
      top: -13px;
    }

    &:placeholder-shown:not(:focus) {
      // Hide input when label is shown
      opacity: 0;
    }
  }

  > #{$label} {
    line-height: $border-size;
    height: auto;
    padding: 0 6px;
    font-size: 0.86em;
    color: $redColor;
    top:-10px;
    // We need to have a fixed background
    background: white;

    @if ($border-style == 'box') {
      // Not strictly needed, but it makes the transition look
      // a little nice.
      border-radius: $border-radius;
    }

    @if ($border-style == 'underline') {
      transform: translate3d(0, 0, 0);
    }
  }

  // Big label ("down there")
  > #{$input}:placeholder-shown:not(:focus) + #{$label} {
    line-height: $height - $border-size * 2;
    margin-top: $border-size;
    font-size: 1em;
    top:0;
    color: $redColor;
    background: transparent;
  }

  > #{$input}::placeholder {
    color: $redColor;
  }
}
